##############################################################################
#
# GitGub CI workflow syntax spec:
#    https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# Coveralls example:
#    https://github.com/marketplace/actions/coveralls-github-action
#
##############################################################################

name: Build

on:
  # Triggered whenever push to the branch
  push:
    branches: 
    - main
    - phase2
    - phase3

  # Triggered whenever a pull request is created on master
  pull_request:
    branches: [ "master" ]
    types: [opened]

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    # Create a container of the latest Ubuntu, other values could be
    # ubuntu-latest, ubuntu-22.04, etc.
    runs-on: ubuntu-20.04
    
    steps:
      # We want to use GitHub CI checkout version 3 for checking out the branch
      - uses: actions/checkout@v3
        with:
          path: wworkspace/src/my_package
      - name: Create dependency workspace
        run: |
            export dir_path=${{github.workspace}}
            mkdir -p $HOME/cat_ws/src
      - uses: betwo/github-setup-catkin@v1.3.0
        with:
          ros-version: 'noetic'
          workspace: $HOME/cat_ws
      # Install OpenCV
      - name: install opencv 
        run: |   
            sudo apt-get install -y libopencv-dev 
            sudo apt-get install -y libopencv-contrib-dev
      - name: install ros
        run: |
            sudo apt-get install ros-noetic-tf2-geometry-msgs
            sudo apt-get install ros-noetic-move-base-msgs
            sudo apt install ros-noetic-moveit
            sudo apt-get install ros-noetic-gazebo-ros-pkgs

      # Install some system pacakges
      - name: Install packages
        run: sudo apt install -y lcov

      - name: Install catkin-tools
        run: |
          sudo apt install python3-catkin-tools python3-osrf-pycommon -y
          
      - name: Create dependency workspace
        run: |
             cd $HOME/cat_ws/src
             echo ${{github.workspace}}
             cp -r ${{github.workspace}} .
             cd .. 
 
      - name: Catkin Build
        run: |
          cd $HOME/cat_ws/
          sudo apt install -y lcov
          . /opt/ros/$ROS_DISTRO/setup.bash
          catkin config --cmake-args -DCMAKE_CXX_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_C_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXE_LINKER_FLAGS="-lgcov"
          catkin build
          catkin run_tests -i && catkin_test_results

      - name: Configure Coverall
        run: |
          cd $HOME/cat_ws/
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/opt/*' '/usr/*' '*/devel/*' '*_test*' --output-file coverage.info
          lcov --list coverage.info

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
         github-token: ${{ secrets.GITHUB_TOKEN }}
         path-to-lcov: /home/runner/cat_ws/coverage.info
